<?xml version="1.0" encoding="UTF-8"?>
<skin>

	<!-- Templates -->

	<screen name="CancelOKTemplate">
		<eLabel position="10*f,e-50*f" size="150*f,40*f" zPosition="-5" backgroundColor="red"/>
		<eLabel position="164*f,e-50*f" size="150*f,40*f" zPosition="-5" backgroundColor="green"/>

		<widget name="canceltext" position="12*f,e-48*f" size="146*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
		<widget name="oktext" position="166*f,e-48*f" size="146*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
	</screen>

	<screen name="ConfigIntroductionLabelTemplate">
		<widget name="config" position="0,10*f" size="520*f,100*f" scrollbarMode="showOnDemand" itemHeight="25*f" font="Regular;20*f"/>
		<widget source="introduction" render="Label" position="15*f,130*f" size="490*f,30*f" font="Regular;22*f"/>
	</screen>

	<screen name="ConfigIntroductionTemplate">
		<widget name="config" position="0,10*f" size="620*f,300*f" enableWrapAround="1" scrollbarMode="showOnDemand" itemHeight="25*f" font="Regular;20*f"/>
		<widget name="introduction" position="15*f,330*f" size="590*f,50*f" font="Regular;22*f"/>
	</screen>

	<screen name="DefaultWizardTemplate">
		<panel name="RCTemplate"/>
		<eLabel position="30*f,535*f" size="15*f,15*f" backgroundColor="red"/>
		<eLabel position="32*f,537*f" size="11*f,11*f"/>
		<widget name="languagetext" position="55*f,530*f" size="200*f,25*f" font="Regular;20*f"/>
		<widget name="text" position="200*f,50*f" size="940*f,200*f" font="Regular;23*f"/>
		<widget source="list" render="Listbox" position="200*f,250*f" size="550*f,250*f" scrollbarMode="showOnDemand">
			<convert type="StringList"/>
		</widget>
		<widget name="config" position="200*f,250*f" size="450*f,250*f" scrollbarMode="showOnDemand" itemHeight="25*f" font="Regular;20*f"/>
		<widget name="wizard" pixmap="picon_default.png" position="40*f,650*f" size="100,60" alphatest="on"/>
	</screen>

	<screen name="DynamicButtonsTemplate">
		<panel position="bottom" size="*,55*f">
			<widget objectTypes="key_red,StaticText" source="key_red" render="FixedLabel" position="15*f,0" size="(e-36*f)/4,40*f" backgroundColor="red">
				<convert type="ConditionalShowHide"/>
			</widget>
			<widget objectTypes="key_green,StaticText" source="key_green" render="FixedLabel" position="(e-36*f)/4+17*f,0" size="(e-36*f)/4,40*f" backgroundColor="green">
				<convert type="ConditionalShowHide"/>
			</widget>
			<widget objectTypes="key_yellow,StaticText" source="key_yellow" render="FixedLabel" position="c+1*f,0" size="(e-36*f)/4,40*f" backgroundColor="yellow">
				<convert type="ConditionalShowHide"/>
			</widget>
			<widget objectTypes="key_blue,StaticText" source="key_blue" render="FixedLabel" position="(e-36*f)*0.75+21*f,0" size="(e-36*f)/4,40*f" backgroundColor="blue">
				<convert type="ConditionalShowHide"/>
			</widget>

			<eLabel objectTypes="key_red,Button,Label" position="15*f,0" size="(e-36*f)/4,40*f" zPosition="-5" backgroundColor="red"/>
			<eLabel objectTypes="key_green,Button,Label" position="(e-36*f)/4+17*f,0" size="(e-36*f)/4,40*f" zPosition="-5" backgroundColor="green"/>
			<eLabel objectTypes="key_yellow,Button,Label" position="c+1*f,0" size="(e-36*f)/4,40*f" zPosition="-5" backgroundColor="yellow"/>
			<eLabel objectTypes="key_blue,Button,Label" position="(e-36*f)*0.75+21*f,0" size="(e-36*f)/4,40*f" zPosition="-5" backgroundColor="blue"/>

			<widget objectTypes="key_red,StaticText" source="key_red" render="Label" position="17*f,2*f" size="(e-36*f)/4-4*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget objectTypes="key_green,StaticText" source="key_green" render="Label" position="(e-36*f)/4+19*f,2*f" size="(e-36*f)/4-4*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget objectTypes="key_yellow,StaticText" source="key_yellow" render="Label" position="c+3*f,2*f" size="(e-36*f)/4-4*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget objectTypes="key_blue,StaticText" source="key_blue" render="Label" position="(e-36*f)*0.75+23*f,2*f" size="(e-36*f)/4-4*f,36*f" font="Regular;22*f" halign="center" valign="center"/>

			<widget objectTypes="key_red,Label,Button" name="key_red" position="17*f,2*f" size="(e-36*f)/4-4*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget objectTypes="key_green,Label,Button" name="key_green" position="(e-36*f)/4+19*f,2*f" size="(e-36*f)/4-4*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget objectTypes="key_yellow,Label,Button" name="key_yellow" position="c+3*f,2*f" size="(e-36*f)/4-4*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget objectTypes="key_blue,Label,Button" name="key_blue" position="(e-36*f)*0.75+23*f,2*f" size="(e-36*f)/4-4*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
		</panel>
		<applet type="onLayoutFinish">
def resize_button_text(self):
	b_height = 0
	for x in ("key_red", "key_green", "key_yellow", "key_blue"):
		if x in self:
			button = self[x]
			if hasattr(button, "downstream_elements"):
				button = button.downstream_elements[-1]
			if not b_height:
				b_height = button.instance.size().height()
			if button.instance.calculateSize().height() > b_height:
				from enigma import gFont
				from skin import getSkinFactor
				button.instance.setFont(gFont("Regular", int(16 * getSkinFactor())))
from Tools.BoundFunction import boundFunction
self.onShown.append(boundFunction(resize_button_text, self))
		</applet>
	</screen>

	<screen name="InfoBarTemplate">
		<widget source="session.CurrentService" render="Label" position="0,e-142*f" size="295*f,35*f" font="Replacement;25*f" foregroundColor="grey" noWrap="1" halign="right">
			<convert type="ServiceName">Provider</convert>
		</widget>
		<widget source="session.CurrentService" render="ChannelNumber" position="295*f,e-147*f" size="70*f,45*f" font="Replacement;30*f" foregroundColor="grey" halign="right"/>
		<widget source="session.CurrentService" render="Label" position="375*f,e-147*f" size="360*f,45*f" font="Replacement;30*f" foregroundColor="grey" noWrap="1">
			<convert type="ServiceName">Name</convert>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="DOLBY" position="735*f,e-126*f" size="52*f,18*f" font="Regular;15*f">
				<convert type="ServiceInfo">IsMultichannel</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="TEXT" position="788*f,e-126*f" size="40*f,18*f" font="Regular;15*f">
				<convert type="ServiceInfo">HasTelext</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="session.RecordState" render="FixedLabel" text="REC" position="829*f,e-130*f" size="35*f,25*f" font="Regular;20*f" foregroundColor="red">
				<convert type="ConditionalShowHide"/>
		</widget>

		<widget source="global.CurrentTime" render="Label" position="1025*f,e-130*f" size="104*f,25*f" font="Regular;20*f" foregroundColor="grey">
			<convert type="ClockToText">Format:%d.%m.%Y</convert>
		</widget>
		<widget source="global.CurrentTime" render="Label" position="1145*f,e-142*f" size="140*f,45*f" font="Replacement;30*f">
			<convert type="ClockToText">Format:%H:%M:%S</convert>
		</widget>

		<widget source="session.Event_Now" render="Label" position="183*f,e-90*f" size="52*f,25*f" halign="right" font="Replacement;20*f">
			<convert type="EventTime">StartTime</convert>
			<convert type="ClockToText">Default;Proportional</convert>
		</widget>
		<widget source="session.Event_Now" render="Label" position="235*f,e-90*f" size="60*f,25*f" font="Replacement;20*f">
			<convert type="EventTime">EndTime</convert>
			<convert type="ClockToText">Format:-%H:%M</convert>
		</widget>
		<widget source="session.Event_Now" render="Label" position="304*f,e-105*f" size="660*f,40*f" font="Replacement;30*f" noWrap="1">
			<convert type="EventName">Name</convert>
		</widget>
		<widget source="session.Event_Now" render="Label" position="965*f,e-90*f" size="100*f,25*f" halign="right" font="Replacement;20*f">
			<convert type="EventTime">Remaining</convert>
			<convert type="RemainingToText">InMinutes</convert>
		</widget>
		<widget source="session.Event_Now" render="Progress" position="185*f,e-60*f" size="880*f,5*f" borderWidth="1" borderColor="grey">
			<convert type="EventTime">Progress</convert>
		</widget>

		<widget source="session.Event_Next" render="Label" position="183*f,e-53*f" size="52*f,25*f" halign="right" font="Replacement;20*f" foregroundColor="grey">
			<convert type="EventTime">StartTime</convert>
			<convert type="ClockToText">Default;Proportional</convert>
		</widget>
		<widget source="session.Event_Next" render="Label" position="235*f,e-53*f" size="60*f,25*f" font="Replacement;20*f" foregroundColor="grey">
			<convert type="EventTime">EndTime</convert>
			<convert type="ClockToText">Format:-%H:%M</convert>
		</widget>
		<widget source="session.Event_Next" render="Label" position="305*f,e-53*f" size="640*f,35*f" font="Replacement;25*f" noWrap="1" foregroundColor="grey">
			<convert type="EventName">Name</convert>
		</widget>
		<widget source="session.Event_Next" render="Label" position="965*f,e-53*f" size="120*f,25*f" halign="right" font="Replacement;20*f" foregroundColor="grey">
			<convert type="EventTime">Duration</convert>
			<convert type="ClockToText">InMinutes</convert>
		</widget>
	
		<eLabel text="SNR:" position="1075*f,e-93*f" size="50*f,20*f" font="Regular;18*f" foregroundColor="grey" halign="right"/>
		<widget source="session.FrontendStatus" render="Label" position="1130*f,e-93*f" size="50*f,20*f" font="Regular;18*f">
			<convert type="FrontendInfo">SNRdB</convert>
		</widget>
		<widget source="session.FrontendStatus" render="Progress" position="1180*f,e-86*f" size="80*f,10*f" borderWidth="1" borderColor="grey">
			<convert type="FrontendInfo">SNR</convert>
		</widget>
		<eLabel text="AGC:" position="1075*f,e-68*f" size="50*f,20*f" font="Regular;18*f" foregroundColor="grey" halign="right"/>
		<widget source="session.FrontendStatus" render="Label" position="1130*f,e-68*f" size="50*f,20*f" font="Regular;18*f">
			<convert type="FrontendInfo">AGC</convert>
		</widget>
		<widget source="session.FrontendStatus" render="Progress" position="1180*f,e-62*f" size="80*f,10*f" borderWidth="1" borderColor="grey">
			<convert type="FrontendInfo">AGC</convert>
		</widget>
		<eLabel text="BER:" position="1075*f,e-43*f" size="50*f,20*f" font="Regular;18*f" foregroundColor="grey" halign="right"/>
		<widget source="session.FrontendStatus" render="Label" position="1130*f,e-43*f" size="50*f,20*f" font="Regular;18*f">
			<convert type="FrontendInfo">BER</convert>
		</widget>
		<widget source="session.FrontendInfo" render="Label" position="1180*f,e-43*f" size="110*f,20*f" font="Regular;18*f">
			<convert type="FrontendInfo">STRING</convert>
		</widget>
	</screen>

	<screen name="InfoBarVideoInfoTemplate">
		<widget source="session.CurrentService" render="Picon" position="15*f,e-103*f" size="150*f,90*f" transparent="1" alphatest="blend">
			<convert type="ServiceName">Reference</convert>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="  4K" position="865*f,e-130*f" size="40*f,25*f" font="Regular;20*f">
				<convert type="ServiceInfo">Is4K</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="  HD" position="865*f,e-130*f" size="40*f,25*f" font="Regular;20*f">
				<convert type="ServiceInfo">IsHD</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="16:9" position="865*f,e-130*f" size="40*f,25*f" font="Regular;20*f">
				<convert type="ServiceInfo">IsSDAndWidescreen</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="4:3" position="865*f,e-130*f" size="40*f,25*f" font="Regular;20*f">
				<convert type="ServiceInfo">IsSDAndNotWidescreen</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget render="VideoSize" source="session.CurrentService" position="910*f,e-130*f" size="110*f,25*f" font="Regular;20*f"/>
	</screen>

	<screen name="LeftButtonsTemplate">
		<panel position="bottom" size="*,55*f">
			<eLabel position="15*f,0" size="170*f,40*f" zPosition="-5" backgroundColor="red"/>
			<eLabel position="189*f,0" size="170*f,40*f" zPosition="-5" backgroundColor="green"/>
			<eLabel position="363*f,0" size="170*f,40*f" zPosition="-5" backgroundColor="yellow"/>
			<eLabel position="537*f,0" size="170*f,40*f" zPosition="-5" backgroundColor="blue"/>

			<widget name="key_red" position="17*f,2*f" size="166*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget name="key_green" position="191*f,2*f" size="166*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget name="key_yellow" position="365*f,2*f" size="166*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget name="key_blue" position="539*f,2*f" size="166*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
		</panel>
		<panel name="ResizeButtonTextTemplate"/>
	</screen>

	<screen name="LeftTextButtonsTemplate">
		<panel position="bottom" size="*,55*f">
			<widget objectTypes="key_red,StaticText" source="key_red" render="FixedLabel" position="15*f,0" size="170*f,40*f" backgroundColor="red">
				<convert type="ConditionalShowHide"/>
			</widget>
			<widget objectTypes="key_green,StaticText" source="key_green" render="FixedLabel" position="189*f,0" size="170*f,40*f" backgroundColor="green">
				<convert type="ConditionalShowHide"/>
			</widget>
			<widget objectTypes="key_yellow,StaticText" source="key_yellow" render="FixedLabel" position="363*f,0" size="170*f,40*f" backgroundColor="yellow">
				<convert type="ConditionalShowHide"/>
			</widget>
			<widget objectTypes="key_blue,StaticText" source="key_blue" render="FixedLabel" position="537*f,0" size="170*f,40*f" backgroundColor="blue">
				<convert type="ConditionalShowHide"/>
			</widget>

			<widget objectTypes="key_red,StaticText" source="key_red" render="Label" position="17*f,2*f" size="166*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget objectTypes="key_green,StaticText" source="key_green" render="Label" position="191*f,2*f" size="166*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget objectTypes="key_yellow,StaticText" source="key_yellow" render="Label" position="365*f,2*f" size="166*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
			<widget objectTypes="key_blue,StaticText" source="key_blue" render="Label" position="539*f,2*f" size="166*f,36*f" font="Regular;22*f" halign="center" valign="center"/>
		</panel>
		<panel name="ResizeButtonStaticTextTemplate"/>
	</screen>

	<screen name="IpkDownloadTemplate">
		<widget name="activityslider" position="15*f,20*f" size="590*f,10*f" foregroundColor="grey" borderWidth="1"/>
		<widget source="package" render="Label" position="15*f,50*f" size="590*f,40*f" font="Regular;20*f"/>
		<widget source="status" render="Label" position="15*f,100*f" size="590*f,80*f" font="Regular;20*f"/>
		<widget name="slider" position="15*f,200*f" size="590*f,30*f" foregroundColor="grey" borderWidth="1"/>
	</screen>

	<screen name="Menu_Template">
		<widget source="menu" render="Listbox" position="0,30*f" size="630*f,605*f" scrollbarMode="showNever">
			<convert type="TemplatedMultiContent">
				{"template": [MultiContentEntryText(pos=(15*f, 13*f), size=(630*f, 32*f), flags=RT_HALIGN_LEFT, text=0)],
				"fonts": [gFont("Replacement", 24*f)],
				"itemHeight": 55*f}
			</convert>
		</widget>
		<applet type="onLayoutFinish">
from enigma import eLabel, eSize, gFont
from skin import getSkinFactor
f = getSkinFactor()
text = self["title"].text
font = 26
for entry in self.list:
	if len(entry[0]) > len(text):
		text = entry[0]
		font = 24
width = eLabel.calculateTextSize(gFont("Replacement", int(font * f)), text, eSize(int(550 * f), int(40 * f))).width()
minwith = 520 * f if self.skinName == "MenuSort" else 150 * f
if minwith > width:
	width = minwith
elif width > 600 * f:
	width = 600 * f
self.instance.resize(eSize(int(width + 30 * f), int(650 * f)))
		</applet>
	</screen>

	<screen name="MessageBox_Template">
		<widget name="text" position="71*f,0" size="514*f,50*f" font="Regular;22*f"/>
		<widget name="ErrorPixmap" pixmap="icons/input_error.svg" position="10*f,0" size="53*f,53*f" alphatest="on"/>
		<widget name="QuestionPixmap" pixmap="icons/input_question.svg" position="10*f,0" size="53*f,53*f" alphatest="on"/>
		<widget name="InfoPixmap" pixmap="icons/input_info.svg" position="10*f,0" size="53*f,53*f" alphatest="on"/>
		<widget name="WarningPixmap" pixmap="icons/input_warning.svg" position="10*f,0*f" size="53*f,53*f" alphatest="on"/>
		<widget name="list" position="15*f,60*f" size="0,0" font="Regular;22*f" itemHeight="30*f" scrollbarMode="showOnDemand"/>
		<applet type="onLayoutFinish">
from enigma import eSize, ePoint
from skin import getSkinFactor
f = getSkinFactor()
textsize = self["text"].getSize()
textsize = (textsize[0] + 2, textsize[1])
wsizex = textsize[0] + 86 * f
wsizey = textsize[1] + 15 * f
if 65 * f > wsizey:
	wsizey = 65 * f
if self.type == self.TYPE_YESNO:
	listlen = len(self.list) * 30 * f
	if listlen > 125 * f:
		listlen = 125 * f
	wsizey += listlen + 10 * f
	listtext = ""
	for x in self.list:
		if len(x[0]) > 5 > len(listtext):
			listtext = x[0]
	if listtext:
		from enigma import eLabel, gFont
		listwith = eLabel.calculateTextSize(gFont("Regular", int(22 * f)), listtext, eSize(int(600 * f), int(30 * f))).width() + 60 * f
		if listwith > wsizex:
			wsizex = listwith
if 230 * f > wsizex:
	wsizex = 230 * f
if self.type == self.TYPE_MESSAGE:
	self["text"].move(int(15 * f), 0)
	wsizex -= 56 * f
elif 50 * f > textsize[1]:
	self["text"].move(int(71 * f), int(14 * f))
self["text"].resize(*textsize)
if self.type == self.TYPE_YESNO:
	self["list"].move(int(15 * f), int(wsizey - listlen - 10 * f))
	self["list"].resize(int(wsizex - 30 * f), int(listlen))
self.instance.move(ePoint(int((1280 * f - wsizex) // 2), int((690  * f - wsizey) // 2)))
self.instance.resize(eSize(int(wsizex), int(wsizey)))
		</applet>
	</screen>

	<screen name="MountConfigTemplate">
		<widget name="config" position="0,15*f" size="600*f,300*f" scrollbarMode="showOnDemand" itemHeight="25*f" font="Regular;20*f"/>
		<widget source="introduction" render="Label" position="15*f,325*f" size="570*f,50*f" font="Regular;22*f"/>
		<widget name="HelpWindow" position="400*f,355*f" size="1,1" zPosition="1"/>
	</screen>

	<screen name="PinInput_Template">
		<widget name="service" position="15*f,10*f" size="470*f,25*f" font="Regular;20*f"/>
		<widget name="text" position="15*f,40*f" size="470*f,25*f" font="Regular;20*f"/>
		<widget name="tries" position="15*f,70*f" size="470*f,25*f" font="Regular;20*f"/>
		<widget name="input" position="15*f,110*f" size="470*f,30*f" font="Regular;25*f"/>
	</screen>

	<screen name="PlayerTemplate">
		<widget source="session.CurrentService" render="Label" position="10*f,e-107*f" size="750*f,40*f" font="Replacement;30*f" foregroundColor="grey" halign="center" noWrap="1">
			<convert type="ServiceName">Name</convert>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="DOLBY" position="770*f,e-86*f" size="52*f,18*f" font="Regular;15*f">
				<convert type="ServiceInfo">IsMultichannel</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="session.RecordState" render="FixedLabel" text="REC" position="823*f,e-90*f" size="35*f,25*f" font="Regular;20*f" foregroundColor="red">
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="  4K" position="860*f,e-90*f" size="40*f,25*f" font="Regular;20*f">
				<convert type="ServiceInfo">Is4K</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="  HD" position="860*f,e-90*f" size="40*f,25*f" font="Regular;20*f">
				<convert type="ServiceInfo">IsHD</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="16:9" position="860*f,e-90*f" size="40*f,25*f" font="Regular;20*f">
				<convert type="ServiceInfo">IsSDAndWidescreen</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="session.CurrentService" render="FixedLabel" text="4:3" position="860*f,e-90*f" size="40*f,25*f" font="Regular;20*f">
				<convert type="ServiceInfo">IsSDAndNotWidescreen</convert>
				<convert type="ConditionalShowHide"/>
		</widget>
		<widget render="VideoSize" source="session.CurrentService" position="905*f,e-90*f" size="100*f,25*f" font="Regular;20*f"/>
		<widget source="global.CurrentTime" render="Label" position="1010*f,e-90*f" size="104*f,25*f" font="Regular;20*f" foregroundColor="grey">
			<convert type="ClockToText">Format:%d.%m.%Y</convert>
		</widget>
		<widget source="global.CurrentTime" render="Label" position="1120*f,e-102*f" size="140*f,45*f" font="Replacement;30*f">
			<convert type="ClockToText">Format:%H:%M:%S</convert>
		</widget>

		<widget source="session.CurrentService" render="Label" position="200*f,e-60*f" size="200*f,25*f" font="Replacement;20*f">
			<convert type="ServicePosition">Position</convert>
		</widget>
		<widget source="session.CurrentService" render="Label" position="640*f,e-60*f" size="200*f,25*f" font="Replacement;20*f">
			<convert type="ServicePosition">Length</convert>
		</widget>
		<widget source="session.CurrentService" render="Label" position="880*f,e-60*f" size="200*f,25*f" font="Replacement;20*f" halign="right">
			<convert type="ServicePosition">Remaining</convert>
		</widget>
		<widget source="session.CurrentService" render="Progress" position="200*f,e-30*f" size="880*f,5*f" borderWidth="1" borderColor="grey">
			<convert type="ServicePosition">Position</convert>
		</widget>
		<widget source="session.CurrentService" render="PositionGauge" position="200*f,e-33*f" size="880*f,10*f" zPosition="2" transparent="1">
			<convert type="ServicePosition">Gauge</convert>
		</widget>
	</screen>

	<screen name="RCTemplate">
		<widget name="rc" position="15,15" size="154,500" pixmaps="skin_default/rc.png,skin_default/rcold.png" alphatest="on"/>
		<widget name="arrowdown" pixmap="skin_default/arrowdown.svg" position="0,0" zPosition="1" size="37,70" transparent="1" alphatest="on"/>
		<widget name="arrowdown2" pixmap="skin_default/arrowdown.svg" position="0,0" zPosition="1" size="37,70" transparent="1" alphatest="on"/>
		<widget name="arrowup" pixmap="skin_default/arrowup.svg" position="0,0" zPosition="1" size="37,70" transparent="1" alphatest="on"/>
		<widget name="arrowup2" pixmap="skin_default/arrowup.svg" position="0,0" zPosition="1" size="37,70" transparent="1" alphatest="on"/>
	</screen>

	<screen name="ResizeButtonStaticTextTemplate">
		<applet type="onLayoutFinish">
b_height = 0
for x in ("key_red", "key_green", "key_yellow", "key_blue"):
	if x in self:
		button = self[x].downstream_elements[-1].instance
		if not b_height:
			b_height = button.size().height()
		if button.calculateSize().height() > b_height:
			from enigma import gFont
			from skin import getSkinFactor
			button.setFont(gFont("Regular", int(16 * getSkinFactor())))
		</applet>
	</screen>

	<screen name="ResizeButtonTextTemplate">
		<applet type="onLayoutFinish">
b_height = 0
for x in ("key_red", "key_green", "key_yellow", "key_blue"):
	if x in self:
		button = self[x].instance
		if not b_height:
			b_height = button.size().height()
		if button.calculateSize().height() > b_height:
			from enigma import gFont
			from skin import getSkinFactor
			button.setFont(gFont("Regular", int(16 * getSkinFactor())))
		</applet>
	</screen>

	<screen name="ScanStatusTemplate">
		<widget name="frontend" pixmap="icons/scan-s.svg" position="15*f,15*f" size="64*f,64*f" transparent="1" alphatest="on"/>
		<widget name="scan_state" position="15*f,100*f" size="420*f,30*f" font="Regular;20*f"/>
		<widget name="scan_progress" position="15*f,140*f" size="420*f,20*f" foregroundColor="grey" borderWidth="1" borderColor="white"/>
	</screen>

	<screen name="ServiceInfoTemplate">
		<widget name="infolist" position="15*f,10*f" size="710*f,480*f" itemHeight="30*f" selectionDisabled="1"  scrollbarMode="showOnDemand"/>
		<panel name="DynamicButtonsTemplate"/>
	</screen>

	<screen name="ServiceScanTemplate">
		<widget source="FrontendInfo" render="Pixmap" pixmap="icons/scan-s.svg" position="15*f,8*f" size="64*f,64*f" transparent="1" alphatest="on">
			<convert type="FrontendInfo">TYPE</convert>
			<convert type="ValueRange">0,0</convert>
			<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="FrontendInfo" render="Pixmap" pixmap="icons/scan-c.svg" position="15*f,8*f" size="64*f,64*f" transparent="1" alphatest="on">
			<convert type="FrontendInfo">TYPE</convert>
			<convert type="ValueRange">1,1</convert>
			<convert type="ConditionalShowHide"/>
		</widget>
		<widget source="FrontendInfo" render="Pixmap" pixmap="icons/scan-t.svg" position="15*f,8*f" size="64*f,64*f" transparent="1" alphatest="on">
			<convert type="FrontendInfo">TYPE</convert>
			<convert type="ValueRange">2,2</convert>
			<convert type="ConditionalShowHide"/>
		</widget>
		<widget name="network" position="95*f,10*f" size="510*f,25*f" font="Regular;20*f"/>
		<widget name="transponder" position="95*f,40*f" size="510*f,25*f" font="Regular;20*f"/>
		<widget name="scan_progress" position="15*f,80*f" size="590*f,20*f" foregroundColor="grey" borderWidth="1" borderColor="white"/>
		<widget name="scan_state" position="15*f,110*f" size="590*f,25*f" zPosition="2" font="Regular;20*f"/>
		<widget name="pass" position="15*f,140*f" size="590*f,25*f" font="Regular;20*f"/>
		<widget name="servicelist" position="15*f,170*f" size="590*f,200*f" enableWrapAround="1" scrollbarMode="showOnDemand" itemHeight="25*f" font="Regular;20*f"/>
	</screen>

	<screen name="VKeyIconTemplate">
		<widget source="VKeyIcon" render="FixedLabel" text="TEXT" position="e-65*f,e+15*f" size="50*f,25*f" halign="center" valign="center" font="Regular;15*f" backgroundColor="grey">
			<convert type="ConditionalShowHide"/>
		</widget>
	</screen>
</skin>

